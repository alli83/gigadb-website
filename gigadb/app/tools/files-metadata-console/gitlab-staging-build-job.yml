Stg_FilesMetadataConsoleBuild:
  variables:
    GIGADB_ENV: "staging"
    YII_DEBUG: "true"
  stage: staging build
  tags:
    - $GITLAB_USER_LOGIN
  needs: ["Ci_FilesMetaDataConsoleTests"]
  environment:
    name: "staging"
    url: $REMOTE_HOME_URL
  script:
    # Load Base image
    - docker login -u $DOCKER_HUB_USERNAME -p $DOCKER_HUB_PASSWORD
    - docker load -i php-8.2.3-cli-bullseye.tar
    - docker load -i php-$PHP_VERSION-fpm-buster.tar
    - docker load -i php-$PHP_VERSION-cli-buster.tar
    - docker load -i alpine-3_14.tar
    - docker load -i nginx-$NGINX_VERSION-alpine.tar
    - docker load -i node-$NODE_VERSION-buster-slim.tar
    # login to gitlab container registry
    - docker login -u gitlab-ci-token -p $CI_JOB_TOKEN registry.gitlab.com
    # build for production
    - echo "Building app"
    - cd gigadb/app/tools/files-metadata-console
    - docker pull registry.gitlab.com/$CI_PROJECT_PATH/production-files-metadata-console:latest || true
    - rm .env || true 2> /dev/null
    - ./configure
    - docker-compose -f ./docker-compose.production-envs.yml build files-metadata-console
    - docker-compose -f ./docker-compose.production-envs.yml images
    - docker tag ${CI_PROJECT_NAME}_files-metadata-console:latest registry.gitlab.com/$CI_PROJECT_PATH/production-files-metadata-console:latest
    - docker push registry.gitlab.com/$CI_PROJECT_PATH/production-files-metadata-console:latest
  artifacts:
    untracked: true
    when: always
    expire_in: 1 week